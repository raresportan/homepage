---
import { getCollection, render } from 'astro:content';
import BaseHead from "../../components/BaseHead.astro";
import Header from "../../components/Header.astro";
import { formatDate, slug, slugify, slugifyAll, getUniqueTags } from "../../lib/utils";

export async function getStaticPaths() {
    const posts = await getCollection('post');
    const tags = getUniqueTags(posts);

    return tags.map(tag => {
        return {
            params: { tag: slugify(tag) },
            props: { tag },
        };
    });
}

const { tag } = Astro.props;

const posts = (await getCollection('post')).sort(
		(a, b) =>
			new Date(b.data.pubDate).valueOf() -
			new Date(a.data.pubDate).valueOf()
);

const getPostsByTag = (posts, tag) => posts.filter(post => post.data.keywords)
                                            .filter(post => slugifyAll(post.data.keywords).includes(slugify(tag)));

const tagPosts =  await Promise.all(getPostsByTag(posts, tag).map(async p => {
	const { remarkPluginFrontmatter } = await render(p);
	const { minutesRead, excerpt } = remarkPluginFrontmatter;
	return ({
		...p,
		data: {
			...p.data,
			minutesRead,
			excerpt
		}
	})
}));
---    

<!DOCTYPE html>
<html lang="en">
	<head>		
        <BaseHead title={`Tag: ${tag}`} description={''} />
	</head>

	<body class:list={["light"]}>
		<Header title={tag} isOnHomePage={false} />
		<main id="main" role="main">            
			<section class="post tag flow centered-content">
				<header>
					<h1 class="title">Tag: {tag}</h1>					
				</header>			
                {tagPosts.map(post => {
                    return (<article>							
								<h2>
									<a href={'../../'+slug(post)}>
										{post.data.title}
									</a>
								</h2>	
								<time datetime={post.data.pubDate}>
									{formatDate(post.data.pubDate)}
								</time>										
							<section>
								<p>{post.data.excerpt}&#8230;</p>
							</section>
						</article>)
                })}	
			</section>
		</main>
	</body>
</html> 